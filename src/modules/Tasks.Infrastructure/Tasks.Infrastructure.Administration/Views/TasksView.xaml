<UserControl
    x:Class="Tasks.Infrastructure.Administration.Views.TasksView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="http://prismlibrary.com/"
    xmlns:overview="clr-namespace:Tasks.Infrastructure.Administration.ViewModels.Overview"
    xmlns:tx="http://unclassified.software/source/txtranslation"
    xmlns:viewModels="clr-namespace:Tasks.Infrastructure.Administration.ViewModels"
    d:DataContext="{d:DesignInstance viewModels:TasksViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/VisualStudioIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Command="{Binding CreateTaskCommand}" Header="{tx:T TasksView:CreateNewTask}" />
            <MenuItem Header="{tx:T TasksInfrastructure:Tasks.RecentCommands}" ItemsSource="{Binding CommandExecutionManager.PendingCommands}">
                <MenuItem.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding CommandDescription.Name}" />
                        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Menu}, Path=DataContext.OpenExecutionOverviewCommand}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCompleted}" Value="false">
                                <Setter Property="Icon">
                                    <Setter.Value>
                                        <mah:ProgressRing IsActive="True" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsCompleted}" Value="true">
                                <Setter Property="Icon" Value="{StaticResource StatusOKIcon}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
        </Menu>
        <DataGrid
            Grid.Row="1"
            AutoGenerateColumns="False"
            ItemsSource="{Binding TasksView}">
            <DataGrid.Resources>
                <ContextMenu x:Key="TaskContextMenu">
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.TriggerCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TasksInfrastructure:TaskOverview.Execute}"
                        Icon="{StaticResource StartWithoutDebugIcon}" />
                    <Separator />
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.OpenTaskSessionsCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TasksInfrastructure:TaskOverview.ShowResults}"
                        Icon="{StaticResource FlatListIcon}" />

                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.UpdateTaskCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TasksInfrastructure:TaskOverview.Edit}"
                        Icon="{StaticResource EditIcon}" />

                    <MenuItem Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ToggleTaskIsEnabledCommand}" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="true">
                                        <Setter Property="Header" Value="{tx:T TasksInfrastructure:TaskOverview.Disable}" />
                                        <Setter Property="Icon" Value="{StaticResource TestNotCoveredIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                                        <Setter Property="Header" Value="{tx:T TasksInfrastructure:TaskOverview.Enable}" />
                                        <Setter Property="Icon" Value="{StaticResource EnableDebuggingIcon}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.RemoveCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T Remove}"
                        Icon="{StaticResource CancelIcon}" />
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="3*"
                    Binding="{Binding Name}"
                    Header="{tx:T Name}"
                    IsReadOnly="True" />
                <DataGridTemplateColumn
                    Width="*"
                    MaxWidth="90"
                    Header="{tx:T TasksInfrastructure:TaskOverview.Status}"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type overview:TaskViewModel}">
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="{tx:T TasksInfrastructure:TaskOverview.Status.Enabled}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                                                <Setter Property="Text" Value="{tx:T TasksInfrastructure:TaskOverview.Status.Disabled}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Width="*"
                    MaxWidth="120"
                    Binding="{Binding Commands}"
                    Header="{tx:T TasksInfrastructure:CreateTask.Commands,
                                  Count=2}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Width="*"
                    MaxWidth="120"
                    Binding="{Binding TotalExecutions}"
                    Header="{tx:T TasksInfrastructure:TaskOverview.Executions,
                                  Count=2}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Binding="{Binding IsCompletedOnServer}"
                    Header="{tx:T TasksInfrastructure:TaskOverview.CompletedOnServer}"
                    IsReadOnly="True" />
                <DataGridTemplateColumn
                    Width="*"
                    MaxWidth="120"
                    Header="{tx:T TasksInfrastructure:TaskOverview.NextExecution}"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type overview:TaskViewModel}">
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="{tx:Time TimeBinding={Binding NextExecution}, Details='YearMonthDay,HourMinuteSecond'}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NextExecution}" Value="{x:Null}">
                                                <Setter Property="Text" Value="{tx:T Unknown}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="*"
                    MaxWidth="120"
                    Header="{tx:T TasksInfrastructure:TaskOverview.LastExecution}"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type overview:TaskViewModel}">
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="{tx:Time TimeBinding={Binding LastExecution}, Details='YearMonthDay,HourMinuteSecond'}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LastExecution}" Value="{x:Null}">
                                                <Setter Property="Text" Value="{tx:T None}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Width="2*"
                    MaxWidth="120"
                    Binding="{tx:Time TimeBinding={Binding AddedOn},
                                      Details='YearMonthDay,HourMinuteSecond'}"
                    Header="{tx:T TasksInfrastructure:TaskOverview.Created}"
                    IsReadOnly="True" />
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MetroDataGridRow}" TargetType="DataGridRow">
                    <Setter Property="ContextMenu" Value="{StaticResource TaskContextMenu}" />
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </Grid>
</UserControl>