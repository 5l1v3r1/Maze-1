<views:WindowUserControl
    x:Class="TaskManager.Administration.Views.TaskManagerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:Anapher.Wpf.Swan.Converter;assembly=Anapher.Wpf.Swan"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=System"
    xmlns:extensions="clr-namespace:Anapher.Wpf.Swan.Extensions;assembly=Anapher.Wpf.Swan"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:taskManager="clr-namespace:TaskManager.Shared.Dtos"
    xmlns:treeListView="clr-namespace:TreeListView;assembly=TreeListView"
    xmlns:tx="http://unclassified.software/source/txtranslation"
    xmlns:viewModels="clr-namespace:TaskManager.Administration.ViewModels"
    xmlns:views="clr-namespace:Maze.Administration.Library.Views;assembly=Maze.Administration.Library"
    d:DataContext="{d:DesignInstance viewModels:TaskManagerViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    TaskBarIcon="../Resources/Images/Process.ico"
    WindowHeight="450"
    WindowWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TreeListView;component/Resources/TreeListView.xaml" />
                <ResourceDictionary Source="../Resources/VisualStudioIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="TextButton" TargetType="Button">
                <Setter Property="Foreground" Value="{StaticResource IdealForegroundColorBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value=".9" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value=".8" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <converter:EnumBooleanConverter x:Key="EnumBooleanConverter" />
            <converter:CloneConverter x:Key="CloneConverter" />

            <SolidColorBrush x:Key="ImmersiveProcessColor" Color="#321ABC5E" />
            <SolidColorBrush x:Key="NetAssemblyProcessColor" Color="#32F39C12" />
            <SolidColorBrush x:Key="ServiceProcessColor" Color="#32E74C3C" />
            <SolidColorBrush x:Key="UserProcessColor" Color="#323498DB" />

            <ContextMenu x:Key="ProcessContextMenu" d:DataContext="{d:DesignInstance viewModels:ProcessViewModel}">
                <MenuItem Header="{tx:T TaskManager:Window}" Icon="{StaticResource ApplicationIcon}">
                    <MenuItem.Style>
                        <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MainWindowHandle}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.BringToFrontCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TaskManager:Window.BringToFront}" />
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.RestoreWindowCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TaskManager:Window.Restore}" />
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.MinimizeWindowCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TaskManager:Window.Minimize}" />
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.MaximizeWindowCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TaskManager:Window.Maximize}" />
                    <Separator />
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CloseWindowCommand}"
                        CommandParameter="{Binding}"
                        Header="{tx:T TaskManager:Window.Close}" />
                </MenuItem>
                <Separator />
                <MenuItem
                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.KillProcessCommand}"
                    CommandParameter="{Binding}"
                    Header="{tx:T TaskManager:Kill}"
                    Icon="{StaticResource CloseSolutionIcon}"
                    InputGestureText="{tx:T TaskManager:Gestures.Del}" />
                <MenuItem
                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.KillProcessTreeCommand}"
                    CommandParameter="{Binding}"
                    Header="{tx:T TaskManager:KillProcessTree}"
                    Icon="{StaticResource CloseGroupIcon}"
                    InputGestureText="{tx:T TaskManager:Gestures.ShiftDel}" />
                <MenuItem
                    Header="{tx:T TaskManager:SetPriority}"
                    Icon="{StaticResource GaugeIcon}"
                    IsEnabled="{Binding CanChangePriorityClass}">
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetPriorityCommand}"
                        Header="{tx:T TaskManager:SetPriority.Realtime}"
                        IsCheckable="True"
                        IsChecked="{Binding PriorityClass, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static diagnostics:ProcessPriorityClass.RealTime}}">
                        <MenuItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <Binding Path="." />
                                <Binding Source="{x:Static diagnostics:ProcessPriorityClass.RealTime}" />
                            </MultiBinding>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetPriorityCommand}"
                        Header="{tx:T TaskManager:SetPriority.High}"
                        IsCheckable="True"
                        IsChecked="{Binding PriorityClass, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static diagnostics:ProcessPriorityClass.High}}">
                        <MenuItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <Binding Path="." />
                                <Binding Source="{x:Static diagnostics:ProcessPriorityClass.High}" />
                            </MultiBinding>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetPriorityCommand}"
                        Header="{tx:T TaskManager:SetPriority.AboveNormal}"
                        IsCheckable="True"
                        IsChecked="{Binding PriorityClass, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static diagnostics:ProcessPriorityClass.AboveNormal}}">
                        <MenuItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <Binding Path="." />
                                <Binding Source="{x:Static diagnostics:ProcessPriorityClass.AboveNormal}" />
                            </MultiBinding>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetPriorityCommand}"
                        Header="{tx:T TaskManager:SetPriority.Normal}"
                        IsCheckable="True"
                        IsChecked="{Binding PriorityClass, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static diagnostics:ProcessPriorityClass.Normal}}">
                        <MenuItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <Binding Path="." />
                                <Binding Source="{x:Static diagnostics:ProcessPriorityClass.Normal}" />
                            </MultiBinding>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetPriorityCommand}"
                        Header="{tx:T TaskManager:SetPriority.BelowNormal}"
                        IsCheckable="True"
                        IsChecked="{Binding PriorityClass, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static diagnostics:ProcessPriorityClass.BelowNormal}}">
                        <MenuItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <Binding Path="." />
                                <Binding Source="{x:Static diagnostics:ProcessPriorityClass.BelowNormal}" />
                            </MultiBinding>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetPriorityCommand}"
                        Header="{tx:T TaskManager:SetPriority.Low}"
                        IsCheckable="True"
                        IsChecked="{Binding PriorityClass, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static diagnostics:ProcessPriorityClass.Idle}}">
                        <MenuItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <Binding Path="." />
                                <Binding Source="{x:Static diagnostics:ProcessPriorityClass.Idle}" />
                            </MultiBinding>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem
                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SuspendCommand}"
                    CommandParameter="{Binding}"
                    Header="{tx:T TaskManager:Suspend}"
                    Icon="{StaticResource PauseIcon}" />
                <MenuItem
                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ResumeCommand}"
                    CommandParameter="{Binding}"
                    Header="{tx:T TaskManager:Resume}"
                    Icon="{StaticResource RunIcon}" />
                <Separator />
                <MenuItem
                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ShowPropertiesCommand}"
                    CommandParameter="{Binding}"
                    Header="{tx:T TaskManager:Properties}"
                    Icon="{StaticResource PropertyIcon}" />
            </ContextMenu>
        </ResourceDictionary>
    </UserControl.Resources>
    <views:WindowUserControl.RightStatusBarContent>
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <CheckBox
                VerticalAlignment="Center"
                IsChecked="{Binding AutoRefresh}"
                ToolTip="{tx:T TaskManager:AutoRefreshDescription}"
                ToolTipService.ShowDuration="{x:Static sys:Int32.MaxValue}" />
            <Button
                Margin="2,0,0,0"
                VerticalAlignment="Center"
                Command="{Binding RefreshCommand}"
                Content="{tx:T Refresh}"
                Style="{StaticResource TextButton}" />
            <ContentControl Foreground="{StaticResource BlackBrush}">
                <ContentControl.Template>
                    <ControlTemplate TargetType="ContentControl">
                        <Grid>
                            <TextBlock
                                x:Name="InformationBlock"
                                Width="80"
                                Margin="10,0,10,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Foreground="{StaticResource IdealForegroundColorBrush}"
                                Text="{tx:T TaskManager:Information}"
                                TextAlignment="Right" />
                            <Popup
                                AllowsTransparency="True"
                                Focusable="False"
                                HorizontalOffset="{Binding ElementName=InformationBlock, Path=ActualWidth}"
                                IsHitTestVisible="False"
                                IsOpen="{Binding ElementName=InformationBlock, Path=IsMouseOver, Mode=OneWay}"
                                Placement="Top"
                                PlacementTarget="{Binding ElementName=InformationBlock}"
                                PopupAnimation="Fade">
                                <Border
                                    Margin="5"
                                    HorizontalAlignment="Stretch"
                                    Background="{StaticResource WhiteBrush}"
                                    BorderBrush="{DynamicResource ComboBoxPopupBrush}"
                                    BorderThickness="1"
                                    IsHitTestVisible="False">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="5"
                                            Opacity=".4"
                                            ShadowDepth="0" />
                                    </Border.Effect>
                                    <StackPanel Margin="5">
                                        <TextBlock
                                            FontSize="14"
                                            FontWeight="Bold"
                                            Text="{tx:T TaskManager:Information.Columns}" />
                                        <StackPanel Margin="0,4,0,0" Orientation="Horizontal">
                                            <TextBlock Width="150" Text="{tx:T Name}" />
                                            <TextBlock FontStyle="Italic" Text="{tx:T TaskManager:Information.Columns.NameDescription}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,2,0,0" Orientation="Horizontal">
                                            <TextBlock Width="150" Text="{tx:T TaskManager:StartTime}" />
                                            <TextBlock FontStyle="Italic" Text="{tx:T TaskManager:Information.Columns.StartTimeDescription}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,2,0,0" Orientation="Horizontal">
                                            <TextBlock Width="150" Text="{tx:T TaskManager:PrivateBytes}" />
                                            <TextBlock FontStyle="Italic" Text="{tx:T TaskManager:Information.Columns.PrivateBytesDescription}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,2,0,0" Orientation="Horizontal">
                                            <TextBlock Width="150" Text="{tx:T TaskManager:WorkingSet}" />
                                            <TextBlock FontStyle="Italic" Text="{tx:T TaskManager:Information.Columns.WorkingSetDescription}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,2,0,0" Orientation="Horizontal">
                                            <TextBlock Width="150" Text="PID" />
                                            <TextBlock FontStyle="Italic" Text="{tx:T TaskManager:Information.Columns.ProcessIdDescription}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,2,0,0" Orientation="Horizontal">
                                            <TextBlock Width="150" Text="{tx:T TaskManager:CompanyName}" />
                                            <TextBlock FontStyle="Italic" Text="{tx:T TaskManager:Information.Columns.CompanyNameDescription}" />
                                        </StackPanel>
                                        <TextBlock
                                            Margin="0,12,0,0"
                                            FontSize="14"
                                            FontWeight="Bold"
                                            Text="{tx:T TaskManager:Information.Colors}" />
                                        <Grid
                                            Height="25"
                                            Margin="0,4,0,0"
                                            Background="{StaticResource ImmersiveProcessColor}">
                                            <StackPanel
                                                Margin="10,0,0,0"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    Width="140"
                                                    FontWeight="Bold"
                                                    Text="{tx:T TaskManager:Information.Colors.ImmersiveProcess}" />
                                                <TextBlock Text="{tx:T TaskManager:Information.Colors.ImmersiveProcess.Info}" />
                                            </StackPanel>
                                        </Grid>
                                        <Grid
                                            Height="25"
                                            Margin="0,2,0,0"
                                            Background="{StaticResource NetAssemblyProcessColor}">
                                            <StackPanel
                                                Margin="10,0,0,0"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    Width="140"
                                                    FontWeight="Bold"
                                                    Text="{tx:T TaskManager:Information.Colors.NetAssembly}" />
                                                <TextBlock Text="{tx:T TaskManager:Information.Colors.NetAssembly.Info}" />
                                            </StackPanel>
                                        </Grid>
                                        <Grid
                                            Height="25"
                                            Margin="0,2,0,0"
                                            Background="{StaticResource ServiceProcessColor}">
                                            <StackPanel
                                                Margin="10,0,0,0"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    Width="140"
                                                    FontWeight="Bold"
                                                    Text="{tx:T TaskManager:Information.Colors.Service}" />
                                                <TextBlock Text="{tx:T TaskManager:Information.Colors.Service.Info}" />
                                            </StackPanel>
                                        </Grid>
                                        <Grid
                                            Height="25"
                                            Margin="0,2,0,0"
                                            Background="{StaticResource UserProcessColor}">
                                            <StackPanel
                                                Margin="10,0,0,0"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    Width="140"
                                                    FontWeight="Bold"
                                                    Text="{tx:T TaskManager:Information.Colors.UserProcess}" />
                                                <TextBlock Text="{tx:T TaskManager:Information.Colors.UserProcess.Info}" />
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </ContentControl.Template>
            </ContentControl>
        </StackPanel>
    </views:WindowUserControl.RightStatusBarContent>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBox
            Margin="5,5,5,10"
            mah:TextBoxHelper.Watermark="{tx:T TaskManager:SearchProcess}"
            Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
        <treeListView:TreeListView
            x:Name="TaskManagerListView"
            Grid.Row="1"
            ChildrenPropertyName="CollectionView"
            ItemsSource="{Binding ProcessView}"
            ScrollViewer.CanContentScroll="False"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling">
            <treeListView:TreeListView.InputBindings>
                <KeyBinding
                    Key="Delete"
                    Command="{Binding RelativeSource={RelativeSource AncestorType=treeListView:TreeListView}, Path=DataContext.KillProcessCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=treeListView:TreeListView}, Path=SelectedItem}" />
                <KeyBinding
                    Key="Delete"
                    Command="{Binding RelativeSource={RelativeSource AncestorType=treeListView:TreeListView}, Path=DataContext.KillProcessTreeCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=treeListView:TreeListView}, Path=SelectedItem}"
                    Modifiers="Shift" />
            </treeListView:TreeListView.InputBindings>
            <treeListView:TreeListView.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn Width="200" Header="{tx:T Name}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ProcessViewModel}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            RenderOptions.BitmapScalingMode="HighQuality">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Source" Value="{Binding Icon}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                                                            <Setter Property="Source" Value="{extensions:WindowsIcons LibraryName=imageres.dll, IconId=11, Size=16}" />
                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBlock
                                            Margin="10,0,0,0"
                                            VerticalAlignment="Center"
                                            Text="{Binding Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="130" Header="{tx:T TaskManager:StartTime}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ProcessViewModel}">
                                    <TextBlock VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Text" Value="{tx:Time TimeBinding={Binding CreationDate}, Details='YearMonthDay,HourMinuteSecond'}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CreationDate}" Value="{x:Static sys:DateTimeOffset.MinValue}">
                                                        <Setter Property="Text" Value="N/A" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="100" Header="{tx:T TaskManager:PrivateBytes}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ProcessViewModel}">
                                    <TextBlock VerticalAlignment="Center" Text="{tx:DataSize NumberBinding={Binding PrivateBytes}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="100" Header="{tx:T TaskManager:WorkingSet}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ProcessViewModel}">
                                    <TextBlock VerticalAlignment="Center" Text="{tx:DataSize NumberBinding={Binding WorkingSet}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="75" Header="PID">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ProcessViewModel}">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Id}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="200" Header="{tx:T TaskManager:CompanyName}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ProcessViewModel}">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding CompanyName}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="200" Header="{tx:T Description}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ProcessViewModel}">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Description}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </treeListView:TreeListView.View>
            <treeListView:TreeListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource MetroTreeListViewItem}" TargetType="treeListView:TreeListViewItem">
                    <Setter Property="ContextMenu" Value="{StaticResource ProcessContextMenu}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="MinHeight" Value="20" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static taskManager:ProcessType.Immersive}">
                            <Setter Property="Background" Value="{StaticResource ImmersiveProcessColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static taskManager:ProcessType.NetAssembly}">
                            <Setter Property="Background" Value="{StaticResource NetAssemblyProcessColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static taskManager:ProcessType.Service}">
                            <Setter Property="Background" Value="{StaticResource ServiceProcessColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static taskManager:ProcessType.UserProcess}">
                            <Setter Property="Background" Value="{StaticResource UserProcessColor}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </treeListView:TreeListView.ItemContainerStyle>
        </treeListView:TreeListView>
    </Grid>
</views:WindowUserControl>