<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Maze.Administration.Controls"
    xmlns:converter="clr-namespace:Maze.Administration.Converter"
    xmlns:converter1="clr-namespace:Anapher.Wpf.Swan.Converter;assembly=Anapher.Wpf.Swan"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:menu="clr-namespace:Maze.Administration.Library.Menu;assembly=Maze.Administration.Library"
    xmlns:statusBar="clr-namespace:Maze.Administration.Library.StatusBar;assembly=Maze.Administration.Library"
    xmlns:tx="http://unclassified.software/source/txtranslation">

    <converter1:CloneConverter x:Key="CloneConverter" />

    <!--#region HeadFooterTabControl-->
    <SolidColorBrush x:Key="TabControlBackgroundBrush" Color="#2b579a" />
    <SolidColorBrush x:Key="TabControlHoverBrush" Color="#3c65a4" />
    <SolidColorBrush x:Key="TabControlSelectedBrush" Color="#124078" />

    <Style x:Key="VerticalMetroTabItem" TargetType="TabItem">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="BackgroundBorder" Background="{StaticResource TabControlBackgroundBrush}">
                        <Grid MinWidth="170">
                            <Path
                                x:Name="ArrowPath"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="M 8 0 L 0 8 L 8 16"
                                Fill="White"
                                RenderOptions.EdgeMode="Unspecified"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed">
                                <Path.RenderTransform>
                                    <TranslateTransform />
                                </Path.RenderTransform>
                            </Path>
                            <ContentControl
                                Margin="15,12,25,12"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                Foreground="White" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource TabControlHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource TabControlSelectedBrush}" />
                            <Setter TargetName="ArrowPath" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowPath"
                                            Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                            From="8"
                                            To="0"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:HeadFooterTabControl">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource VerticalMetroTabItem}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:HeadFooterTabControl">
                    <Grid Background="{StaticResource TabControlBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentControl Content="{TemplateBinding Head}" Foreground="White" />
                        <ContentControl
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="{TemplateBinding Footer}"
                            Foreground="White" />
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="0"
                            Grid.RowSpan="3"
                            Grid.Column="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region CommonControls-->

    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ContextMenu-->

    <Style
        x:Key="SeparatorVisibleForSingleSelection"
        BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"
        TargetType="Separator">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="SeparatorVisibleForMultipleSelection"
        BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"
        TargetType="Separator">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MenuItemVisibleForSingleSelection"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="CommandParameter" Value="{Binding}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MenuItemVisibleForMultipleSelection"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems)}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MenuItemVisibleEverything"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems)}" />
    </Style>

    <!--#endregion-->

    <!--#region StatusBar-->

    <converter:NoNewLinesConverter x:Key="NoNewLinesConverter" />

    <Style TargetType="controls:StatusBar">
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:StatusBar">
                    <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}">
                        <DockPanel Margin="6,0,0,0" LastChildFill="True">
                            <mah:TransitioningContentControl
                                Margin="0,0,10,0"
                                VerticalAlignment="Center"
                                Foreground="{StaticResource IdealForegroundColorBrush}"
                                Transition="Down">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type statusBar:TextStatusMessage}">
                                        <DockPanel>
                                            <controls:FrameAnimationControl VerticalAlignment="Center">
                                                <controls:FrameAnimationControl.Style>
                                                    <Style TargetType="controls:FrameAnimationControl">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Animation}" Value="{x:Static statusBar:StatusBarAnimation.None}">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Animation}" Value="{x:Static statusBar:StatusBarAnimation.Build}">
                                                                <Setter Property="FrameResourceName" Value="BuildSolutionStatusBar*Icon/13" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Animation}" Value="{x:Static statusBar:StatusBarAnimation.Save}">
                                                                <Setter Property="FrameResourceName" Value="SaveStatusBar*Icon/9" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Animation}" Value="{x:Static statusBar:StatusBarAnimation.Search}">
                                                                <Setter Property="FrameResourceName" Value="SearchStatusBar*Icon/7" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Animation}" Value="{x:Static statusBar:StatusBarAnimation.Send}">
                                                                <Setter Property="FrameResourceName" Value="SyncArrowStatusBar*Icon/12" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </controls:FrameAnimationControl.Style>
                                            </controls:FrameAnimationControl>
                                            <mah:TransitioningContentControl
                                                Margin="6,0,0,0"
                                                VerticalAlignment="Center"
                                                Content="{Binding Message, Converter={StaticResource NoNewLinesConverter}}"
                                                Transition="Down" />
                                        </DockPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type statusBar:ProgressStatusMessage}">
                                        <DockPanel>
                                            <mah:MetroProgressBar
                                                Width="75"
                                                Height="9"
                                                VerticalAlignment="Center"
                                                Background="{StaticResource IdealForegroundColorBrush}"
                                                BorderBrush="{StaticResource GrayBrush8}"
                                                BorderThickness="1"
                                                Maximum="1"
                                                Value="{Binding Progress}">
                                                <mah:MetroProgressBar.Style>
                                                    <Style TargetType="mah:MetroProgressBar">
                                                        <Setter Property="Foreground" Value="#2ecc71" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Progress}" Value="{x:Null}">
                                                                <Setter Property="IsIndeterminate" Value="True" />
                                                                <Setter Property="Foreground" Value="{StaticResource IdealForegroundColorBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </mah:MetroProgressBar.Style>
                                            </mah:MetroProgressBar>
                                            <TextBlock
                                                Margin="6,0,0,0"
                                                VerticalAlignment="Center"
                                                Text="{Binding Message}" />
                                        </DockPanel>
                                    </DataTemplate>
                                </ContentControl.Resources>
                                <mah:TransitioningContentControl.Style>
                                    <Style TargetType="mah:TransitioningContentControl">
                                        <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShellStatusBar.CurrentStatusMessage}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShellStatusBar.CurrentStatusMessage}" Value="{x:Null}">
                                                <Setter Property="Content" Value="{tx:T Ready}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </mah:TransitioningContentControl.Style>
                            </mah:TransitioningContentControl>
                            <ContentControl Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShellStatusBar.RightContent}" Foreground="{StaticResource IdealForegroundColorBrush}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CurrentMode" Value="Default">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource AccentColor}"
                                            Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="CurrentMode" Value="Error">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#c0392b"
                                            Duration="0:0:0.4">
                                            <ColorAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseIn" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource AccentColor}"
                                            Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="CurrentMode" Value="Success">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#27ae60"
                                            Duration="0:0:0.4">
                                            <ColorAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseIn" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource AccentColor}"
                                            Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="CurrentMode" Value="Warning">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#e67e22"
                                            Duration="0:0:0.4">
                                            <ColorAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseIn" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource AccentColor}"
                                            Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Flyouts-->
    <DropShadowEffect
        x:Key="MaterialDesignShadowDepth5"
        BlurRadius="35"
        Direction="270"
        Opacity=".42"
        RenderingBias="Performance"
        ShadowDepth="13"
        Color="#AA000000" />

    <ControlTemplate x:Key="FlyoutTemplate" TargetType="{x:Type mah:Flyout}">
        <Border
            x:Name="PART_Root"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Effect="{StaticResource MaterialDesignShadowDepth5}">
            <Border.RenderTransform>
                <TranslateTransform />
            </Border.RenderTransform>
            <AdornerDecorator>
                <DockPanel FocusVisualStyle="{x:Null}" Focusable="False">
                    <mah:MetroThumbContentControl
                        x:Name="PART_Header"
                        Padding="{TemplateBinding mah:ControlsHelper.HeaderMargin}"
                        Content="{TemplateBinding Header}"
                        ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        DockPanel.Dock="Top"
                        FontSize="{TemplateBinding mah:ControlsHelper.HeaderFontSize}"
                        FontStretch="{TemplateBinding mah:ControlsHelper.HeaderFontStretch}"
                        FontWeight="{TemplateBinding mah:ControlsHelper.HeaderFontWeight}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ContentPresenter
                        x:Name="PART_Content"
                        ContentSource="Content"
                        DockPanel.Dock="Bottom" />
                </DockPanel>
            </AdornerDecorator>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="Default" />
                    <VisualState x:Name="Hide">
                        <Storyboard x:Name="HideStoryboard">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame
                                    x:Name="hideFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame
                                    x:Name="hideFrameY"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame
                                    x:Name="fadeOutFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Show">
                        <Storyboard x:Name="ShowStoryboard">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame
                                    x:Name="showFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame
                                    x:Name="showFrameY"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HideDirect">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ShowDirect">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Position" Value="Top">
                <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
                <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
            </Trigger>
            <Trigger Property="Position" Value="Bottom">
                <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
                <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CloseButtonVisibility" Value="Collapsed" />
                    <Condition Property="TitleVisibility" Value="Collapsed" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CloseButtonVisibility" Value="Hidden" />
                    <Condition Property="TitleVisibility" Value="Hidden" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="mah:Flyout">
        <Setter Property="Template" Value="{StaticResource FlyoutTemplate}" />
    </Style>
    <!--#endregion-->

    <!--#region ValueText-->
    <Style x:Key="ValueText" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Text" Value="" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource LightColorBrush}" />
    </Style>
    <!--#endregion ValueText-->

    <!--#region Windows10TabControl-->
    <Style x:Key="Windows10TabItem" TargetType="TabItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Margin="-1,0,0,-1">
                        <Border
                            x:Name="Border"
                            Margin="0,0,0,1"
                            Background="{DynamicResource TabItemBackgroundBrush}"
                            BorderBrush="{DynamicResource TabItemBorderBrush}"
                            BorderThickness="1,1,1,0" />
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="8,3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            IsHitTestVisible="False"
                            RecognizesAccessKey="True"
                            TextBlock.Foreground="{StaticResource BlackBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TabItemMouseOverBorderBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemMouseOverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemSelectedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="Margin" Value="0,-2,0,0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TabItemBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Windows10TabControl" TargetType="TabControl">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource Windows10TabItem}" />
    </Style>
    <!--#endregion Windows10TabControl-->

    <!--#region GroupsMenu-->


    <converter:GetGroupCheckedObserverConverter x:Key="GetGroupCheckedObserverConverter" />

    <ContentControl x:Key="ClientGroupsMenuItemIcon" x:Shared="False">
        <ContentControl.Style>
            <Style TargetType="ContentControl">
                <Setter Property="Content">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource GetGroupCheckedObserverConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="." />
                                <Binding Path="(menu:ContextMenuExtensions.SelectedItems)" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type converter:GroupCheckedObserver}">
                            <CheckBox
                                Margin="4,0,0,0"
                                IsChecked="{Binding IsChecked}"
                                IsEnabled="False"
                                IsThreeState="True" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ContentControl.Style>
    </ContentControl>

    <Style
        x:Key="ClientGroupsMenuItem"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="Header" Value="{tx:T Groups}" />
        <Setter Property="Icon">
            <Setter.Value>
                <Grid Width="13" Height="13">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="1" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="1" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="{StaticResource GrayBrush2}" />
                    <Rectangle
                        Grid.Row="0"
                        Grid.Column="2"
                        Fill="{StaticResource GrayBrush2}" />
                    <Rectangle
                        Grid.Row="2"
                        Grid.Column="0"
                        Fill="{StaticResource GrayBrush2}" />
                    <Rectangle
                        Grid.Row="2"
                        Grid.Column="2"
                        Fill="{StaticResource GrayBrush2}" />
                </Grid>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Tag.ToggleAddCommand}" />
                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="." />
                                    <Binding Path="(menu:ContextMenuExtensions.SelectedItems)" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Header" Value="{Binding Name}" />
                    <Setter Property="Icon" Value="{StaticResource ClientGroupsMenuItemIcon}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
</ResourceDictionary>