<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:controls="clr-namespace:Maze.Administration.Controls"
    xmlns:converter="clr-namespace:Maze.Administration.Converter"
    xmlns:converter1="clr-namespace:Anapher.Wpf.Swan.Converter;assembly=Anapher.Wpf.Swan"
    xmlns:extensions="clr-namespace:Maze.Administration.Extensions"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:menu="clr-namespace:Maze.Administration.Library.Menu;assembly=Maze.Administration.Library"
    xmlns:statusBar="clr-namespace:Maze.Administration.Library.StatusBar;assembly=Maze.Administration.Library"
    xmlns:tx="http://unclassified.software/source/txtranslation">

    <converter1:CloneConverter x:Key="CloneConverter" />

    <!--#region HeadFooterTabControl-->
    <SolidColorBrush x:Key="TabControlBackgroundBrush" Color="#2b579a" />
    <SolidColorBrush x:Key="TabControlHoverBrush" Color="#3c65a4" />
    <SolidColorBrush x:Key="TabControlSelectedBrush" Color="#124078" />

    <Style x:Key="VerticalMetroTabItem" TargetType="TabItem">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="BackgroundBorder" Background="{StaticResource TabControlBackgroundBrush}">
                        <Grid MinWidth="170">
                            <Path
                                x:Name="ArrowPath"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="M 8 0 L 0 8 L 8 16"
                                Fill="White"
                                RenderOptions.EdgeMode="Unspecified"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed">
                                <Path.RenderTransform>
                                    <TranslateTransform />
                                </Path.RenderTransform>
                            </Path>
                            <ContentControl
                                Margin="15,12,25,12"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                Foreground="White" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource TabControlHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource TabControlSelectedBrush}" />
                            <Setter TargetName="ArrowPath" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowPath"
                                            Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                            From="8"
                                            To="0"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:HeadFooterTabControl">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource VerticalMetroTabItem}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:HeadFooterTabControl">
                    <Grid Background="{StaticResource TabControlBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentControl Content="{TemplateBinding Head}" Foreground="White" />
                        <ContentControl
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="{TemplateBinding Footer}"
                            Foreground="White" />
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="0"
                            Grid.RowSpan="3"
                            Grid.Column="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region CommonControls-->

    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundBorder">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ContextMenu-->

    <Style
        x:Key="SeparatorVisibleForSingleSelection"
        BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"
        TargetType="Separator">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="SeparatorVisibleForMultipleSelection"
        BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"
        TargetType="Separator">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MenuItemVisibleForSingleSelection"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="CommandParameter" Value="{Binding}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MenuItemVisibleForMultipleSelection"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems)}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems).Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MenuItemVisibleEverything"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=(menu:ContextMenuExtensions.SelectedItems)}" />
    </Style>

    <!--#endregion-->

    <!--#region ValueText-->
    <Style x:Key="ValueText" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Text" Value="" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource LightColorBrush}" />
    </Style>
    <!--#endregion ValueText-->

    <!--#region Windows10TabControl-->
    <Style x:Key="Windows10TabItem" TargetType="TabItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Margin="-1,0,0,-1">
                        <Border
                            x:Name="Border"
                            Margin="0,0,0,1"
                            Background="{DynamicResource TabItemBackgroundBrush}"
                            BorderBrush="{DynamicResource TabItemBorderBrush}"
                            BorderThickness="1,1,1,0" />
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="8,3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            IsHitTestVisible="False"
                            RecognizesAccessKey="True"
                            TextBlock.Foreground="{StaticResource BlackBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TabItemMouseOverBorderBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemMouseOverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemSelectedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="Margin" Value="0,-2,0,0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TabItemBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Windows10TabControl" TargetType="TabControl">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource Windows10TabItem}" />
    </Style>
    <!--#endregion Windows10TabControl-->

    <!--#region GroupsMenu-->


    <converter:GetGroupCheckedObserverConverter x:Key="GetGroupCheckedObserverConverter" />

    <ContentControl x:Key="ClientGroupsMenuItemIcon" x:Shared="False">
        <ContentControl.Style>
            <Style TargetType="ContentControl">
                <Setter Property="Content">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource GetGroupCheckedObserverConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="." />
                                <Binding Path="(menu:ContextMenuExtensions.SelectedItems)" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type converter:GroupCheckedObserver}">
                            <CheckBox
                                Margin="4,0,0,0"
                                IsChecked="{Binding IsChecked}"
                                IsEnabled="False"
                                IsThreeState="True" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ContentControl.Style>
    </ContentControl>

    <Style
        x:Key="ClientGroupsMenuItem"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem">
        <Setter Property="Header" Value="{tx:T Groups}" />
        <Setter Property="Icon">
            <Setter.Value>
                <Grid Width="13" Height="13">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="1" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="1" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="{StaticResource GrayBrush2}" />
                    <Rectangle
                        Grid.Row="0"
                        Grid.Column="2"
                        Fill="{StaticResource GrayBrush2}" />
                    <Rectangle
                        Grid.Row="2"
                        Grid.Column="0"
                        Fill="{StaticResource GrayBrush2}" />
                    <Rectangle
                        Grid.Row="2"
                        Grid.Column="2"
                        Fill="{StaticResource GrayBrush2}" />
                </Grid>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Tag.ToggleAddCommand}" />
                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource CloneConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="." />
                                    <Binding Path="(menu:ContextMenuExtensions.SelectedItems)" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Header" Value="{Binding Name}" />
                    <Setter Property="Icon" Value="{StaticResource ClientGroupsMenuItemIcon}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Avalon Edit-->
    <Style TargetType="avalonedit:TextEditor">
        <Setter Property="Background" Value="#1e1e1e" />
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="ShowLineNumbers" Value="True" />
        <Setter Property="Foreground" Value="#dcdcdc" />
        <Setter Property="LineNumbersForeground" Value="#2b91af" />
        <Setter Property="Padding" Value="10,0,0,0" />
        <Setter Property="extensions:TextEditorExtensions.EnableNiceStyle" Value="True" />
    </Style>
    <!--#endregion-->
</ResourceDictionary>